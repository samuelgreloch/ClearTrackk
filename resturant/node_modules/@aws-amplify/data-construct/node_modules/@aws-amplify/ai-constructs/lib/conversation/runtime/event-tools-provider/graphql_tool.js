"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GraphQlTool = void 0;
const graphql_request_executor_1 = require("../graphql_request_executor");
/**
 * A tool that use GraphQl queries.
 */
class GraphQlTool {
    /**
     * Creates GraphQl Tool
     */
    constructor(name, description, inputSchema, graphQlEndpoint, query, accessToken, userAgentProvider, graphqlRequestExecutor = new graphql_request_executor_1.GraphqlRequestExecutor(graphQlEndpoint, accessToken, userAgentProvider)) {
        this.name = name;
        this.description = description;
        this.inputSchema = inputSchema;
        this.graphQlEndpoint = graphQlEndpoint;
        this.query = query;
        this.accessToken = accessToken;
        this.userAgentProvider = userAgentProvider;
        this.graphqlRequestExecutor = graphqlRequestExecutor;
        this.execute = async (input) => {
            if (!input) {
                throw Error(`GraphQl tool '${this.name}' requires input to execute.`);
            }
            const response = await this.graphqlRequestExecutor.executeGraphql({
                query: this.query,
                variables: input,
            });
            return { json: response };
        };
    }
}
exports.GraphQlTool = GraphQlTool;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JhcGhxbF90b29sLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbnZlcnNhdGlvbi9ydW50aW1lL2V2ZW50LXRvb2xzLXByb3ZpZGVyL2dyYXBocWxfdG9vbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFHQSwwRUFBcUU7QUFHckU7O0dBRUc7QUFDSCxNQUFhLFdBQVc7SUFDdEI7O09BRUc7SUFDSCxZQUNTLElBQVksRUFDWixXQUFtQixFQUNuQixXQUF3QyxFQUN0QyxlQUF1QixFQUNmLEtBQWEsRUFDckIsV0FBbUIsRUFDbkIsaUJBQW9DLEVBQzVCLHlCQUF5QixJQUFJLGlEQUFzQixDQUNsRSxlQUFlLEVBQ2YsV0FBVyxFQUNYLGlCQUFpQixDQUNsQjtRQVhNLFNBQUksR0FBSixJQUFJLENBQVE7UUFDWixnQkFBVyxHQUFYLFdBQVcsQ0FBUTtRQUNuQixnQkFBVyxHQUFYLFdBQVcsQ0FBNkI7UUFDdEMsb0JBQWUsR0FBZixlQUFlLENBQVE7UUFDZixVQUFLLEdBQUwsS0FBSyxDQUFRO1FBQ3JCLGdCQUFXLEdBQVgsV0FBVyxDQUFRO1FBQ25CLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFDNUIsMkJBQXNCLEdBQXRCLHNCQUFzQixDQUl0QztRQUdILFlBQU8sR0FBRyxLQUFLLEVBQ2IsS0FBMEIsRUFDTyxFQUFFO1lBQ25DLElBQUksQ0FBQyxLQUFLLEVBQUU7Z0JBQ1YsTUFBTSxLQUFLLENBQUMsaUJBQWlCLElBQUksQ0FBQyxJQUFJLDhCQUE4QixDQUFDLENBQUM7YUFDdkU7WUFFRCxNQUFNLFFBQVEsR0FBRyxNQUFNLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxjQUFjLENBRy9EO2dCQUNBLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztnQkFDakIsU0FBUyxFQUFFLEtBQUs7YUFDakIsQ0FBQyxDQUFDO1lBQ0gsT0FBTyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsQ0FBQztRQUM1QixDQUFDLENBQUM7SUFqQkMsQ0FBQztDQWtCTDtBQW5DRCxrQ0FtQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFeGVjdXRhYmxlVG9vbCwgSlNPTlNjaGVtYSwgVG9vbElucHV0U2NoZW1hIH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IHR5cGUgeyBUb29sUmVzdWx0Q29udGVudEJsb2NrIH0gZnJvbSAnQGF3cy1zZGsvY2xpZW50LWJlZHJvY2stcnVudGltZSc7XG5pbXBvcnQgeyBEb2N1bWVudFR5cGUgfSBmcm9tICdAc21pdGh5L3R5cGVzJztcbmltcG9ydCB7IEdyYXBocWxSZXF1ZXN0RXhlY3V0b3IgfSBmcm9tICcuLi9ncmFwaHFsX3JlcXVlc3RfZXhlY3V0b3InO1xuaW1wb3J0IHsgVXNlckFnZW50UHJvdmlkZXIgfSBmcm9tICcuLi91c2VyX2FnZW50X3Byb3ZpZGVyJztcblxuLyoqXG4gKiBBIHRvb2wgdGhhdCB1c2UgR3JhcGhRbCBxdWVyaWVzLlxuICovXG5leHBvcnQgY2xhc3MgR3JhcGhRbFRvb2wgaW1wbGVtZW50cyBFeGVjdXRhYmxlVG9vbDxKU09OU2NoZW1hLCB1bmtub3duPiB7XG4gIC8qKlxuICAgKiBDcmVhdGVzIEdyYXBoUWwgVG9vbFxuICAgKi9cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIG5hbWU6IHN0cmluZyxcbiAgICBwdWJsaWMgZGVzY3JpcHRpb246IHN0cmluZyxcbiAgICBwdWJsaWMgaW5wdXRTY2hlbWE6IFRvb2xJbnB1dFNjaGVtYTxKU09OU2NoZW1hPixcbiAgICByZWFkb25seSBncmFwaFFsRW5kcG9pbnQ6IHN0cmluZyxcbiAgICBwcml2YXRlIHJlYWRvbmx5IHF1ZXJ5OiBzdHJpbmcsXG4gICAgcmVhZG9ubHkgYWNjZXNzVG9rZW46IHN0cmluZyxcbiAgICByZWFkb25seSB1c2VyQWdlbnRQcm92aWRlcjogVXNlckFnZW50UHJvdmlkZXIsXG4gICAgcHJpdmF0ZSByZWFkb25seSBncmFwaHFsUmVxdWVzdEV4ZWN1dG9yID0gbmV3IEdyYXBocWxSZXF1ZXN0RXhlY3V0b3IoXG4gICAgICBncmFwaFFsRW5kcG9pbnQsXG4gICAgICBhY2Nlc3NUb2tlbixcbiAgICAgIHVzZXJBZ2VudFByb3ZpZGVyXG4gICAgKVxuICApIHt9XG5cbiAgZXhlY3V0ZSA9IGFzeW5jIChcbiAgICBpbnB1dDogdW5rbm93biB8IHVuZGVmaW5lZFxuICApOiBQcm9taXNlPFRvb2xSZXN1bHRDb250ZW50QmxvY2s+ID0+IHtcbiAgICBpZiAoIWlucHV0KSB7XG4gICAgICB0aHJvdyBFcnJvcihgR3JhcGhRbCB0b29sICcke3RoaXMubmFtZX0nIHJlcXVpcmVzIGlucHV0IHRvIGV4ZWN1dGUuYCk7XG4gICAgfVxuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmdyYXBocWxSZXF1ZXN0RXhlY3V0b3IuZXhlY3V0ZUdyYXBocWw8XG4gICAgICB1bmtub3duLFxuICAgICAgRG9jdW1lbnRUeXBlXG4gICAgPih7XG4gICAgICBxdWVyeTogdGhpcy5xdWVyeSxcbiAgICAgIHZhcmlhYmxlczogaW5wdXQsXG4gICAgfSk7XG4gICAgcmV0dXJuIHsganNvbjogcmVzcG9uc2UgfTtcbiAgfTtcbn1cbiJdfQ==