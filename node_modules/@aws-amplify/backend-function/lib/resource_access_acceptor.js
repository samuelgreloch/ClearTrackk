/**
 * A function resource acceptor.
 */
export class FunctionResourceAccessAcceptor {
    func;
    functionEnvironmentTranslator;
    identifier;
    /**
     * Creates function resource acceptor.
     */
    constructor(func, functionEnvironmentTranslator) {
        this.func = func;
        this.functionEnvironmentTranslator = functionEnvironmentTranslator;
        this.identifier = `${func.node.id}LambdaResourceAccessAcceptor`;
    }
    acceptResourceAccess = (policy, ssmEnvironmentEntries) => {
        const role = this.func.resources.lambda.role;
        if (!role) {
            // This should never happen since we are using the Function L2 construct
            throw new Error('No execution role found to attach lambda permissions to');
        }
        policy.attachToRole(role);
        if (this.functionEnvironmentTranslator) {
            for (const { name, path } of ssmEnvironmentEntries) {
                this.functionEnvironmentTranslator.addSsmEnvironmentEntry(name, path);
            }
        }
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb3VyY2VfYWNjZXNzX2FjY2VwdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL3Jlc291cmNlX2FjY2Vzc19hY2NlcHRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQTs7R0FFRztBQUNILE1BQU0sT0FBTyw4QkFBOEI7SUFPdEI7SUFDQTtJQVBWLFVBQVUsQ0FBUztJQUU1Qjs7T0FFRztJQUNILFlBQ21CLElBQXlCLEVBQ3pCLDZCQUE2RDtRQUQ3RCxTQUFJLEdBQUosSUFBSSxDQUFxQjtRQUN6QixrQ0FBNkIsR0FBN0IsNkJBQTZCLENBQWdDO1FBRTlFLElBQUksQ0FBQyxVQUFVLEdBQUcsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsOEJBQThCLENBQUM7SUFDbEUsQ0FBQztJQUVELG9CQUFvQixHQUFHLENBQ3JCLE1BQWMsRUFDZCxxQkFBNEMsRUFDNUMsRUFBRTtRQUNGLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7UUFDN0MsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNULHdFQUF3RTtZQUN4RSxNQUFNLElBQUksS0FBSyxDQUNiLHlEQUF5RCxDQUMxRCxDQUFDO1NBQ0g7UUFDRCxNQUFNLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzFCLElBQUksSUFBSSxDQUFDLDZCQUE2QixFQUFFO1lBQ3RDLEtBQUssTUFBTSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxxQkFBcUIsRUFBRTtnQkFDbEQsSUFBSSxDQUFDLDZCQUE2QixDQUFDLHNCQUFzQixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQzthQUN2RTtTQUNGO0lBQ0gsQ0FBQyxDQUFDO0NBQ0giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBSZXNvdXJjZUFjY2Vzc0FjY2VwdG9yLFxuICBTc21FbnZpcm9ubWVudEVudHJ5LFxufSBmcm9tICdAYXdzLWFtcGxpZnkvcGx1Z2luLXR5cGVzJztcbmltcG9ydCB7IEZ1bmN0aW9uRW52aXJvbm1lbnRUcmFuc2xhdG9yIH0gZnJvbSAnLi9mdW5jdGlvbl9lbnZfdHJhbnNsYXRvci5qcyc7XG5pbXBvcnQgeyBBbXBsaWZ5RnVuY3Rpb25CYXNlIH0gZnJvbSAnLi9mdW5jdGlvbl9jb25zdHJ1Y3RfYmFzZS5qcyc7XG5pbXBvcnQgeyBQb2xpY3kgfSBmcm9tICdhd3MtY2RrLWxpYi9hd3MtaWFtJztcblxuLyoqXG4gKiBBIGZ1bmN0aW9uIHJlc291cmNlIGFjY2VwdG9yLlxuICovXG5leHBvcnQgY2xhc3MgRnVuY3Rpb25SZXNvdXJjZUFjY2Vzc0FjY2VwdG9yIGltcGxlbWVudHMgUmVzb3VyY2VBY2Nlc3NBY2NlcHRvciB7XG4gIHJlYWRvbmx5IGlkZW50aWZpZXI6IHN0cmluZztcblxuICAvKipcbiAgICogQ3JlYXRlcyBmdW5jdGlvbiByZXNvdXJjZSBhY2NlcHRvci5cbiAgICovXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcmVhZG9ubHkgZnVuYzogQW1wbGlmeUZ1bmN0aW9uQmFzZSxcbiAgICBwcml2YXRlIHJlYWRvbmx5IGZ1bmN0aW9uRW52aXJvbm1lbnRUcmFuc2xhdG9yPzogRnVuY3Rpb25FbnZpcm9ubWVudFRyYW5zbGF0b3JcbiAgKSB7XG4gICAgdGhpcy5pZGVudGlmaWVyID0gYCR7ZnVuYy5ub2RlLmlkfUxhbWJkYVJlc291cmNlQWNjZXNzQWNjZXB0b3JgO1xuICB9XG5cbiAgYWNjZXB0UmVzb3VyY2VBY2Nlc3MgPSAoXG4gICAgcG9saWN5OiBQb2xpY3ksXG4gICAgc3NtRW52aXJvbm1lbnRFbnRyaWVzOiBTc21FbnZpcm9ubWVudEVudHJ5W11cbiAgKSA9PiB7XG4gICAgY29uc3Qgcm9sZSA9IHRoaXMuZnVuYy5yZXNvdXJjZXMubGFtYmRhLnJvbGU7XG4gICAgaWYgKCFyb2xlKSB7XG4gICAgICAvLyBUaGlzIHNob3VsZCBuZXZlciBoYXBwZW4gc2luY2Ugd2UgYXJlIHVzaW5nIHRoZSBGdW5jdGlvbiBMMiBjb25zdHJ1Y3RcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ05vIGV4ZWN1dGlvbiByb2xlIGZvdW5kIHRvIGF0dGFjaCBsYW1iZGEgcGVybWlzc2lvbnMgdG8nXG4gICAgICApO1xuICAgIH1cbiAgICBwb2xpY3kuYXR0YWNoVG9Sb2xlKHJvbGUpO1xuICAgIGlmICh0aGlzLmZ1bmN0aW9uRW52aXJvbm1lbnRUcmFuc2xhdG9yKSB7XG4gICAgICBmb3IgKGNvbnN0IHsgbmFtZSwgcGF0aCB9IG9mIHNzbUVudmlyb25tZW50RW50cmllcykge1xuICAgICAgICB0aGlzLmZ1bmN0aW9uRW52aXJvbm1lbnRUcmFuc2xhdG9yLmFkZFNzbUVudmlyb25tZW50RW50cnkobmFtZSwgcGF0aCk7XG4gICAgICB9XG4gICAgfVxuICB9O1xufVxuIl19