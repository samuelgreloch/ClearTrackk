import { Tags } from 'aws-cdk-lib';
import { AmplifyStack } from './engine/amplify_stack.js';
/**
 * Creates stacks that are tied to a given project environment via an SSM parameter
 */
export class ProjectEnvironmentMainStackCreator {
    scope;
    backendId;
    mainStack = undefined;
    /**
     * Initialize with a project environment
     */
    constructor(scope, backendId) {
        this.scope = scope;
        this.backendId = backendId;
    }
    /**
     * Get a stack for this environment in the provided CDK scope
     */
    getOrCreateMainStack = () => {
        if (this.mainStack === undefined) {
            this.mainStack = new AmplifyStack(this.scope, this.backendId);
        }
        const deploymentType = this.backendId.type;
        Tags.of(this.mainStack).add('created-by', 'amplify');
        if (deploymentType === 'branch') {
            Tags.of(this.mainStack).add('amplify:app-id', this.backendId.namespace);
            Tags.of(this.mainStack).add('amplify:branch-name', this.backendId.name);
            Tags.of(this.mainStack).add('amplify:deployment-type', 'branch');
        }
        else if (deploymentType === 'sandbox') {
            Tags.of(this.mainStack).add('amplify:deployment-type', 'sandbox');
        }
        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
        return this.mainStack;
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvamVjdF9lbnZpcm9ubWVudF9tYWluX3N0YWNrX2NyZWF0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvcHJvamVjdF9lbnZpcm9ubWVudF9tYWluX3N0YWNrX2NyZWF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUFTLElBQUksRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMxQyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFekQ7O0dBRUc7QUFDSCxNQUFNLE9BQU8sa0NBQWtDO0lBTTFCO0lBQ0E7SUFOWCxTQUFTLEdBQXNCLFNBQVMsQ0FBQztJQUNqRDs7T0FFRztJQUNILFlBQ21CLEtBQWdCLEVBQ2hCLFNBQTRCO1FBRDVCLFVBQUssR0FBTCxLQUFLLENBQVc7UUFDaEIsY0FBUyxHQUFULFNBQVMsQ0FBbUI7SUFDNUMsQ0FBQztJQUVKOztPQUVHO0lBQ0gsb0JBQW9CLEdBQUcsR0FBVSxFQUFFO1FBQ2pDLElBQUksSUFBSSxDQUFDLFNBQVMsS0FBSyxTQUFTLEVBQUU7WUFDaEMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUMvRDtRQUVELE1BQU0sY0FBYyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDO1FBQzNDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDckQsSUFBSSxjQUFjLEtBQUssUUFBUSxFQUFFO1lBQy9CLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1lBQ3hFLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ3hFLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyx5QkFBeUIsRUFBRSxRQUFRLENBQUMsQ0FBQztTQUNsRTthQUFNLElBQUksY0FBYyxLQUFLLFNBQVMsRUFBRTtZQUN2QyxJQUFJLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxHQUFHLENBQUMseUJBQXlCLEVBQUUsU0FBUyxDQUFDLENBQUM7U0FDbkU7UUFDRCxvRUFBb0U7UUFDcEUsT0FBTyxJQUFJLENBQUMsU0FBVSxDQUFDO0lBQ3pCLENBQUMsQ0FBQztDQUNIIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFja2VuZElkZW50aWZpZXIsIE1haW5TdGFja0NyZWF0b3IgfSBmcm9tICdAYXdzLWFtcGxpZnkvcGx1Z2luLXR5cGVzJztcbmltcG9ydCB7IENvbnN0cnVjdCB9IGZyb20gJ2NvbnN0cnVjdHMnO1xuaW1wb3J0IHsgU3RhY2ssIFRhZ3MgfSBmcm9tICdhd3MtY2RrLWxpYic7XG5pbXBvcnQgeyBBbXBsaWZ5U3RhY2sgfSBmcm9tICcuL2VuZ2luZS9hbXBsaWZ5X3N0YWNrLmpzJztcblxuLyoqXG4gKiBDcmVhdGVzIHN0YWNrcyB0aGF0IGFyZSB0aWVkIHRvIGEgZ2l2ZW4gcHJvamVjdCBlbnZpcm9ubWVudCB2aWEgYW4gU1NNIHBhcmFtZXRlclxuICovXG5leHBvcnQgY2xhc3MgUHJvamVjdEVudmlyb25tZW50TWFpblN0YWNrQ3JlYXRvciBpbXBsZW1lbnRzIE1haW5TdGFja0NyZWF0b3Ige1xuICBwcml2YXRlIG1haW5TdGFjazogU3RhY2sgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG4gIC8qKlxuICAgKiBJbml0aWFsaXplIHdpdGggYSBwcm9qZWN0IGVudmlyb25tZW50XG4gICAqL1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJlYWRvbmx5IHNjb3BlOiBDb25zdHJ1Y3QsXG4gICAgcHJpdmF0ZSByZWFkb25seSBiYWNrZW5kSWQ6IEJhY2tlbmRJZGVudGlmaWVyXG4gICkge31cblxuICAvKipcbiAgICogR2V0IGEgc3RhY2sgZm9yIHRoaXMgZW52aXJvbm1lbnQgaW4gdGhlIHByb3ZpZGVkIENESyBzY29wZVxuICAgKi9cbiAgZ2V0T3JDcmVhdGVNYWluU3RhY2sgPSAoKTogU3RhY2sgPT4ge1xuICAgIGlmICh0aGlzLm1haW5TdGFjayA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aGlzLm1haW5TdGFjayA9IG5ldyBBbXBsaWZ5U3RhY2sodGhpcy5zY29wZSwgdGhpcy5iYWNrZW5kSWQpO1xuICAgIH1cblxuICAgIGNvbnN0IGRlcGxveW1lbnRUeXBlID0gdGhpcy5iYWNrZW5kSWQudHlwZTtcbiAgICBUYWdzLm9mKHRoaXMubWFpblN0YWNrKS5hZGQoJ2NyZWF0ZWQtYnknLCAnYW1wbGlmeScpO1xuICAgIGlmIChkZXBsb3ltZW50VHlwZSA9PT0gJ2JyYW5jaCcpIHtcbiAgICAgIFRhZ3Mub2YodGhpcy5tYWluU3RhY2spLmFkZCgnYW1wbGlmeTphcHAtaWQnLCB0aGlzLmJhY2tlbmRJZC5uYW1lc3BhY2UpO1xuICAgICAgVGFncy5vZih0aGlzLm1haW5TdGFjaykuYWRkKCdhbXBsaWZ5OmJyYW5jaC1uYW1lJywgdGhpcy5iYWNrZW5kSWQubmFtZSk7XG4gICAgICBUYWdzLm9mKHRoaXMubWFpblN0YWNrKS5hZGQoJ2FtcGxpZnk6ZGVwbG95bWVudC10eXBlJywgJ2JyYW5jaCcpO1xuICAgIH0gZWxzZSBpZiAoZGVwbG95bWVudFR5cGUgPT09ICdzYW5kYm94Jykge1xuICAgICAgVGFncy5vZih0aGlzLm1haW5TdGFjaykuYWRkKCdhbXBsaWZ5OmRlcGxveW1lbnQtdHlwZScsICdzYW5kYm94Jyk7XG4gICAgfVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tbm9uLW51bGwtYXNzZXJ0aW9uXG4gICAgcmV0dXJuIHRoaXMubWFpblN0YWNrITtcbiAgfTtcbn1cbiJdfQ==