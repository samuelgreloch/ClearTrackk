{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\capbu\\\\IdeaProjects\\\\resturant\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport Tesseract from 'tesseract.js';\nimport Webcam from 'react-webcam';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [receipts, setReceipts] = useState([]);\n  const [timeFilter, setTimeFilter] = useState('day');\n  const [useWebcam, setUseWebcam] = useState(false);\n  const [editingReceipt, setEditingReceipt] = useState(null);\n  const webcamRef = useRef(null);\n  const handleAddReceipt = event => {\n    const file = event.target.files[0];\n    if (file) {\n      processImage(file);\n    }\n  };\n  const processImage = useCallback(image => {\n    let imgForOCR;\n    if (image instanceof Blob) {\n      // Handling image from webcam\n      imgForOCR = image;\n    } else {\n      // Handling image from file input\n      const reader = new FileReader();\n      reader.onload = e => {\n        Tesseract.recognize(e.target.result, 'eng', {\n          logger: m => console.log(m)\n        }).then(({\n          data: {\n            text\n          }\n        }) => {\n          const newReceipt = parseReceipt(text);\n          setReceipts(receipts => [...receipts, newReceipt]);\n        }).catch(err => console.error('Error processing image:', err));\n      };\n      reader.readAsDataURL(image);\n      return;\n    }\n    Tesseract.recognize(imgForOCR, 'eng', {\n      logger: m => console.log(m)\n    }).then(({\n      data: {\n        text\n      }\n    }) => {\n      const newReceipt = parseReceipt(text);\n      setReceipts(receipts => [...receipts, newReceipt]);\n    }).catch(err => console.error('Error processing image:', err));\n  }, []);\n  const captureFromWebcam = () => {\n    webcamRef.current.getScreenshot({\n      quality: 0.8,\n      width: 1280,\n      height: 720\n    }, imgSrc => {\n      fetch(imgSrc).then(res => res.blob()).then(blob => processImage(blob)).catch(err => console.error('Error capturing webcam image:', err));\n    });\n  };\n  const parseReceipt = text => {\n    // Implementation details as shown previously...\n    console.log(\"Parsed OCR Text:\", text);\n    // Parsing logic...\n  };\n\n  // Additional code for editing, updating, and rendering receipts, and the graph as provided previously...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Restaurant Receipt Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setUseWebcam(!useWebcam),\n        children: useWebcam ? 'Use File Upload' : 'Scan Receipt'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), useWebcam ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        width: 400,\n        style: {\n          marginBottom: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: captureFromWebcam,\n        children: \"Capture and Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleAddReceipt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload a vendor receipt to scan it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"edY+3LseHJaaZTNUXTnENuhgydU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useCallback","Tesseract","Webcam","Bar","jsxDEV","_jsxDEV","App","_s","receipts","setReceipts","timeFilter","setTimeFilter","useWebcam","setUseWebcam","editingReceipt","setEditingReceipt","webcamRef","handleAddReceipt","event","file","target","files","processImage","image","imgForOCR","Blob","reader","FileReader","onload","e","recognize","result","logger","m","console","log","then","data","text","newReceipt","parseReceipt","catch","err","error","readAsDataURL","captureFromWebcam","current","getScreenshot","quality","width","height","imgSrc","fetch","res","blob","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","audio","ref","screenshotFormat","style","marginBottom","type","accept","onChange","_c","$RefreshReg$"],"sources":["C:/Users/capbu/IdeaProjects/resturant/src/App.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport Tesseract from 'tesseract.js';\nimport Webcam from 'react-webcam';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nfunction App() {\n    const [receipts, setReceipts] = useState([]);\n    const [timeFilter, setTimeFilter] = useState('day');\n    const [useWebcam, setUseWebcam] = useState(false);\n    const [editingReceipt, setEditingReceipt] = useState(null);\n    const webcamRef = useRef(null);\n\n    const handleAddReceipt = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            processImage(file);\n        }\n    };\n\n    const processImage = useCallback((image) => {\n        let imgForOCR;\n        if (image instanceof Blob) {  // Handling image from webcam\n            imgForOCR = image;\n        } else {  // Handling image from file input\n            const reader = new FileReader();\n            reader.onload = (e) => {\n                Tesseract.recognize(e.target.result, 'eng', { logger: (m) => console.log(m) })\n                    .then(({ data: { text } }) => {\n                        const newReceipt = parseReceipt(text);\n                        setReceipts(receipts => [...receipts, newReceipt]);\n                    })\n                    .catch(err => console.error('Error processing image:', err));\n            };\n            reader.readAsDataURL(image);\n            return;\n        }\n        Tesseract.recognize(imgForOCR, 'eng', { logger: (m) => console.log(m) })\n            .then(({ data: { text } }) => {\n                const newReceipt = parseReceipt(text);\n                setReceipts(receipts => [...receipts, newReceipt]);\n            })\n            .catch(err => console.error('Error processing image:', err));\n    }, []);\n\n    const captureFromWebcam = () => {\n        webcamRef.current.getScreenshot({\n            quality: 0.8,\n            width: 1280,\n            height: 720\n        }, (imgSrc) => {\n            fetch(imgSrc)\n                .then(res => res.blob())\n                .then(blob => processImage(blob))\n                .catch(err => console.error('Error capturing webcam image:', err));\n        });\n    };\n\n    const parseReceipt = (text) => {\n        // Implementation details as shown previously...\n        console.log(\"Parsed OCR Text:\", text);\n        // Parsing logic...\n    };\n\n    // Additional code for editing, updating, and rendering receipts, and the graph as provided previously...\n\n    return (\n        <div>\n            <h1>Restaurant Receipt Scanner</h1>\n\n            <div>\n                <button onClick={() => setUseWebcam(!useWebcam)}>\n                    {useWebcam ? 'Use File Upload' : 'Scan Receipt'}\n                </button>\n            </div>\n\n            {useWebcam ? (\n                <div>\n                    <Webcam\n                        audio={false}\n                        ref={webcamRef}\n                        screenshotFormat=\"image/jpeg\"\n                        width={400}\n                        style={{ marginBottom: '20px' }}\n                    />\n                    <button onClick={captureFromWebcam}>Capture and Scan</button>\n                </div>\n            ) : (\n                <div>\n                    <input type=\"file\" accept=\"image/*\" onChange={handleAddReceipt} />\n                    <p>Upload a vendor receipt to scan it.</p>\n                </div>\n            )}\n\n            {/* The rest of your code for displaying and editing receipts and showing the graph remains unchanged */}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}