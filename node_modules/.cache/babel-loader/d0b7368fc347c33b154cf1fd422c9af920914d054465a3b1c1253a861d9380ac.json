{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\capbu\\\\IdeaProjects\\\\resturant\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Tesseract from 'tesseract.js';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [receipts, setReceipts] = useState([]);\n  const [scanResult, setScanResult] = useState(null);\n  const [timeFilter, setTimeFilter] = useState('day');\n\n  // Add receipt handler\n  const handleAddReceipt = event => {\n    const file = event.target.files[0];\n    if (file) {\n      Tesseract.recognize(file, 'eng', {\n        logger: info => console.log(info)\n      }).then(({\n        data: {\n          text\n        }\n      }) => {\n        // Parse the scanned text into a structured receipt\n        const newReceipt = parseReceipt(text);\n        setReceipts([...receipts, newReceipt]);\n      }).catch(error => console.error('Error scanning receipt:', error));\n    }\n  };\n\n  // Parse the receipt text to extract relevant data\n  const parseReceipt = text => {\n    // Example: Extract vendor name, date, and total cost from the text\n    const vendorMatch = text.match(/(.*Restaurant|.*Cafe|.*Diner)/i);\n    const vendorName = vendorMatch ? vendorMatch[0] : 'Unknown Vendor';\n    const dateMatch = text.match(/\\d{2}\\/\\d{2}\\/\\d{4}/);\n    const date = dateMatch ? new Date(dateMatch[0]) : new Date();\n    const totalMatch = text.match(/TOTAL\\s*\\$([0-9\\.]+)/i);\n    const totalPrice = totalMatch ? parseFloat(totalMatch[1]) : 0;\n    return {\n      vendorName,\n      date,\n      totalPrice,\n      rawText: text // Keep raw text for debugging or additional processing\n    };\n  };\n\n  // Processed data for graph\n  const processDataForGraph = () => {\n    const filteredReceipts = receipts.filter(receipt => {\n      const now = new Date();\n      const receiptDate = new Date(receipt.date);\n      if (timeFilter === 'day') {\n        return now.toDateString() === receiptDate.toDateString();\n      } else if (timeFilter === 'week') {\n        const oneWeekAgo = new Date();\n        oneWeekAgo.setDate(now.getDate() - 7);\n        return receiptDate >= oneWeekAgo;\n      } else if (timeFilter === 'month') {\n        return receiptDate.getMonth() === now.getMonth() && receiptDate.getFullYear() === now.getFullYear();\n      }\n      return false;\n    });\n    const dataCounts = filteredReceipts.reduce((acc, receipt) => {\n      const date = new Date(receipt.date).toDateString();\n      acc[date] = (acc[date] || 0) + 1;\n      return acc;\n    }, {});\n    const totalSales = filteredReceipts.reduce((sum, receipt) => {\n      return sum + receipt.totalPrice;\n    }, 0);\n    const totalReceipts = filteredReceipts.length;\n    return {\n      data: {\n        labels: Object.keys(dataCounts),\n        datasets: [{\n          label: 'Receipts Scanned',\n          data: Object.values(dataCounts),\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        }, {\n          label: 'Total Sales',\n          data: Object.keys(dataCounts).map(() => totalSales),\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          borderColor: 'rgba(255, 99, 132, 1)',\n          borderWidth: 1\n        }]\n      },\n      summary: {\n        totalSales,\n        totalReceipts\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Restaurant Receipt Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleAddReceipt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload a vendor receipt to scan it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), scanResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Scan Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(scanResult, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Financial Insights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          padding: '10px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Sales:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 24\n          }, this), \" $\", processDataForGraph().summary.totalSales.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Receipts Scanned:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 24\n          }, this), \" \", processDataForGraph().summary.totalReceipts]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Receipts Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: timeFilter,\n        onChange: e => setTimeFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"day\",\n          children: \"Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"week\",\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"month\",\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: processDataForGraph().data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"0sRRkETXIYPU38Qmuw5iEzbScXo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Tesseract","Bar","jsxDEV","_jsxDEV","App","_s","receipts","setReceipts","scanResult","setScanResult","timeFilter","setTimeFilter","handleAddReceipt","event","file","target","files","recognize","logger","info","console","log","then","data","text","newReceipt","parseReceipt","catch","error","vendorMatch","match","vendorName","dateMatch","date","Date","totalMatch","totalPrice","parseFloat","rawText","processDataForGraph","filteredReceipts","filter","receipt","now","receiptDate","toDateString","oneWeekAgo","setDate","getDate","getMonth","getFullYear","dataCounts","reduce","acc","totalSales","sum","totalReceipts","length","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","map","summary","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","JSON","stringify","style","border","padding","marginBottom","toFixed","value","e","_c","$RefreshReg$"],"sources":["C:/Users/capbu/IdeaProjects/resturant/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Tesseract from 'tesseract.js';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nfunction App() {\n    const [receipts, setReceipts] = useState([]);\n    const [scanResult, setScanResult] = useState(null);\n    const [timeFilter, setTimeFilter] = useState('day');\n\n    // Add receipt handler\n    const handleAddReceipt = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            Tesseract.recognize(file, 'eng', {\n                logger: (info) => console.log(info),\n            })\n                .then(({ data: { text } }) => {\n                    // Parse the scanned text into a structured receipt\n                    const newReceipt = parseReceipt(text);\n                    setReceipts([...receipts, newReceipt]);\n                })\n                .catch((error) => console.error('Error scanning receipt:', error));\n        }\n    };\n\n    // Parse the receipt text to extract relevant data\n    const parseReceipt = (text) => {\n        // Example: Extract vendor name, date, and total cost from the text\n        const vendorMatch = text.match(/(.*Restaurant|.*Cafe|.*Diner)/i);\n        const vendorName = vendorMatch ? vendorMatch[0] : 'Unknown Vendor';\n\n        const dateMatch = text.match(/\\d{2}\\/\\d{2}\\/\\d{4}/);\n        const date = dateMatch ? new Date(dateMatch[0]) : new Date();\n\n        const totalMatch = text.match(/TOTAL\\s*\\$([0-9\\.]+)/i);\n        const totalPrice = totalMatch ? parseFloat(totalMatch[1]) : 0;\n\n        return {\n            vendorName,\n            date,\n            totalPrice,\n            rawText: text, // Keep raw text for debugging or additional processing\n        };\n    };\n\n    // Processed data for graph\n    const processDataForGraph = () => {\n        const filteredReceipts = receipts.filter((receipt) => {\n            const now = new Date();\n            const receiptDate = new Date(receipt.date);\n\n            if (timeFilter === 'day') {\n                return (\n                    now.toDateString() === receiptDate.toDateString()\n                );\n            } else if (timeFilter === 'week') {\n                const oneWeekAgo = new Date();\n                oneWeekAgo.setDate(now.getDate() - 7);\n                return receiptDate >= oneWeekAgo;\n            } else if (timeFilter === 'month') {\n                return (\n                    receiptDate.getMonth() === now.getMonth() &&\n                    receiptDate.getFullYear() === now.getFullYear()\n                );\n            }\n            return false;\n        });\n\n        const dataCounts = filteredReceipts.reduce((acc, receipt) => {\n            const date = new Date(receipt.date).toDateString();\n            acc[date] = (acc[date] || 0) + 1;\n            return acc;\n        }, {});\n\n        const totalSales = filteredReceipts.reduce((sum, receipt) => {\n            return sum + receipt.totalPrice;\n        }, 0);\n\n        const totalReceipts = filteredReceipts.length;\n\n        return {\n            data: {\n                labels: Object.keys(dataCounts),\n                datasets: [\n                    {\n                        label: 'Receipts Scanned',\n                        data: Object.values(dataCounts),\n                        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n                        borderColor: 'rgba(75, 192, 192, 1)',\n                        borderWidth: 1,\n                    },\n                    {\n                        label: 'Total Sales',\n                        data: Object.keys(dataCounts).map(() => totalSales),\n                        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                        borderColor: 'rgba(255, 99, 132, 1)',\n                        borderWidth: 1,\n                    },\n                ],\n            },\n            summary: {\n                totalSales,\n                totalReceipts,\n            },\n        };\n    };\n\n    return (\n        <div>\n            <h1>Restaurant Receipt Scanner</h1>\n\n            <div>\n                <input type=\"file\" accept=\"image/*\" onChange={handleAddReceipt} />\n                <p>Upload a vendor receipt to scan it.</p>\n            </div>\n\n            {scanResult && (\n                <div>\n                    <h2>Scan Result</h2>\n                    <pre>{JSON.stringify(scanResult, null, 2)}</pre>\n                </div>\n            )}\n\n            <div>\n                <h2>Financial Insights</h2>\n                <div style={{ border: '1px solid #ccc', padding: '10px', marginBottom: '20px' }}>\n                    <p><strong>Total Sales:</strong> ${processDataForGraph().summary.totalSales.toFixed(2)}</p>\n                    <p><strong>Total Receipts Scanned:</strong> {processDataForGraph().summary.totalReceipts}</p>\n                </div>\n            </div>\n\n            <div>\n                <h2>Receipts Graph</h2>\n                <select\n                    value={timeFilter}\n                    onChange={(e) => setTimeFilter(e.target.value)}\n                >\n                    <option value=\"day\">Day</option>\n                    <option value=\"week\">Week</option>\n                    <option value=\"month\">Month</option>\n                </select>\n\n                <Bar data={processDataForGraph().data} />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}