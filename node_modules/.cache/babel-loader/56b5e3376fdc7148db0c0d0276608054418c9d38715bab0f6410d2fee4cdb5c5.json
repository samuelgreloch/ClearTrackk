{"ast":null,"code":"var _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Tesseract from 'tesseract.js';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { useState } from \"react\";\nfunction App() {\n  _s();\n  const [receipts, setReceipts] = useState([]);\n  const [scanResult, setScanResult] = useState(null);\n  const [timeFilter, setTimeFilter] = useState('day');\n  const handleAddReceipt = event => {\n    const file = event.targret.files[0];\n    if (file) {\n      Tesseract.recognize(file, 'eng', {\n        logger: info => console.log(info)\n      }).then(({\n        data: {\n          text\n        }\n      }) => {\n        const newReceipt = {\n          text,\n          data: new Date()\n        };\n        setReceipts([...receipts, newReceipt]);\n      }).catch(error => console.error('Error scanning receipt:', error));\n    }\n  };\n}\n_s(App, \"0sRRkETXIYPU38Qmuw5iEzbScXo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Tesseract","Bar","useState","App","_s","receipts","setReceipts","scanResult","setScanResult","timeFilter","setTimeFilter","handleAddReceipt","event","file","targret","files","recognize","logger","info","console","log","then","data","text","newReceipt","Date","catch","error","_c","$RefreshReg$"],"sources":["C:/Users/capbu/IdeaProjects/resturant/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Tesseract from 'tesseract.js';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport {useState} from \"react\";\n\nfunction App(){\n    const [receipts, setReceipts] = useState([]);\n    const [scanResult, setScanResult] = useState(null);\n    const [timeFilter, setTimeFilter] = useState('day');\n\n    const handleAddReceipt = (event) => {\n        const file = event.targret.files[0];\n        if (file) {\n            Tesseract.recognize(file, 'eng',{logger: (info)=> console.log(info)\n            })\n                .then(({data: { text } })=> {\n                    const newReceipt = { text, data: new Date() };\n                    setReceipts ([...receipts, newReceipt]);\n                })\n                .catch((error)=> console.error('Error scanning receipt:', error));\n        }\n    };\n\n}\n\nexport default App;\n\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,SAAS,MAAM,cAAc;AACpC,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,eAAe;AACtB,SAAQC,QAAQ,QAAO,OAAO;AAE9B,SAASC,GAAGA,CAAA,EAAE;EAAAC,EAAA;EACV,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,IAAI,GAAGD,KAAK,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC,CAAC;IACnC,IAAIF,IAAI,EAAE;MACNb,SAAS,CAACgB,SAAS,CAACH,IAAI,EAAE,KAAK,EAAC;QAACI,MAAM,EAAGC,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI;MAClE,CAAC,CAAC,CACGG,IAAI,CAAC,CAAC;QAACC,IAAI,EAAE;UAAEC;QAAK;MAAE,CAAC,KAAI;QACxB,MAAMC,UAAU,GAAG;UAAED,IAAI;UAAED,IAAI,EAAE,IAAIG,IAAI,CAAC;QAAE,CAAC;QAC7CnB,WAAW,CAAE,CAAC,GAAGD,QAAQ,EAAEmB,UAAU,CAAC,CAAC;MAC3C,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAIR,OAAO,CAACQ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;IACzE;EACJ,CAAC;AAEL;AAACvB,EAAA,CAlBQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAoBZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}