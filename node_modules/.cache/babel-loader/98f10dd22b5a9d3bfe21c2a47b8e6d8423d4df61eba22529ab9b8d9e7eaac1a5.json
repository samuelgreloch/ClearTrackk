{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\capbu\\\\IdeaProjects\\\\resturant\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport Tesseract from 'tesseract.js';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [receipts, setReceipts] = useState([]);\n  const [scanResult, setScanResult] = useState(null);\n  const [timeFilter, setTimeFilter] = useState('day');\n  const handleAddReceipt = event => {\n    const file = event.targret.files[0];\n    if (file) {\n      Tesseract.recognize(file, 'eng', {\n        logger: info => console.log(info)\n      }).then(({\n        data: {\n          text\n        }\n      }) => {\n        const newReceipt = {\n          text,\n          data: new Date()\n        };\n        setReceipts([...receipts, newReceipt]);\n      }).catch(error => console.error('Error scanning receipt:', error));\n    }\n  };\n  const processDataForGraph = () => {\n    const filteredReceipts = receipts.filter(receipt => {\n      const now = new Date();\n      const receiptDate = new Date(receipt.date);\n      if (timeFilter === 'day') {\n        return now.toDateString() === receiptDate.DateString();\n      } else if (timeFilter === 'week') {\n        const oneWeekAgo = new Date();\n        oneWeekAgo.setDate(now.getDate() - 7);\n        return receiptDate >= oneWeekAgo;\n      } else if (timeFilter === 'month') {\n        return receiptDate.getMonth() === now.getMonth() && receiptDate.getFullYear() === now.getFullYear();\n      }\n      return false;\n    });\n    const dataCounts = filteredReceipts.reduce((acc, receipt) => {\n      const date = new Date(receipt.date).toDateString();\n      acc[date] = (acc[date] || 0) + 1;\n      return acc;\n    }, {});\n    return {\n      labels: Object.keys(dataCounts),\n      datasets: [{\n        label: 'Receipts Scanned',\n        data: Object.values(dataCounts),\n        backgroundColor: 'rgba(75,192,192,0.2)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Restaurant Receipt Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleAddReceipt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload a vendor receipt to scan it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), scanResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Scan Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: scanResult\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Receipts Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: timeFilter,\n        onChange: e => setTimeFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"day\",\n          children: \"Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"week\",\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"month\",\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: processDataForGraph()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"0sRRkETXIYPU38Qmuw5iEzbScXo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Tesseract","Bar","useState","jsxDEV","_jsxDEV","App","_s","receipts","setReceipts","scanResult","setScanResult","timeFilter","setTimeFilter","handleAddReceipt","event","file","targret","files","recognize","logger","info","console","log","then","data","text","newReceipt","Date","catch","error","processDataForGraph","filteredReceipts","filter","receipt","now","receiptDate","date","toDateString","DateString","oneWeekAgo","setDate","getDate","getMonth","getFullYear","dataCounts","reduce","acc","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","value","e","target","_c","$RefreshReg$"],"sources":["C:/Users/capbu/IdeaProjects/resturant/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Tesseract from 'tesseract.js';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport {useState} from \"react\";\n\nfunction App(){\n    const [receipts, setReceipts] = useState([]);\n    const [scanResult, setScanResult] = useState(null);\n    const [timeFilter, setTimeFilter] = useState('day');\n\n    const handleAddReceipt = (event) => {\n        const file = event.targret.files[0];\n        if (file) {\n            Tesseract.recognize(file, 'eng',{logger: (info)=> console.log(info)\n            })\n                .then(({data: { text } })=> {\n                    const newReceipt = { text, data: new Date() };\n                    setReceipts ([...receipts, newReceipt]);\n                })\n                .catch((error)=> console.error('Error scanning receipt:', error));\n        }\n    };\n\n    const processDataForGraph = () => {\n        const filteredReceipts = receipts.filter((receipt) => {\n            const now = new Date();\n            const receiptDate = new Date(receipt.date);\n            if (timeFilter === 'day') {\n                return (\n                    now.toDateString() === receiptDate.DateString()\n                );\n            } else if (timeFilter === 'week') {\n                const oneWeekAgo = new Date();\n                oneWeekAgo.setDate(now.getDate()-7);\n                return receiptDate >= oneWeekAgo;\n            }   else if (timeFilter === 'month'){\n                return (\n                    receiptDate.getMonth() === now.getMonth() &&\n                    receiptDate.getFullYear() === now.getFullYear()\n                );\n            }\n            return false;\n        });\n\n        const dataCounts = filteredReceipts.reduce((acc, receipt) => {\n            const date = new Date(receipt.date).toDateString();\n            acc[date] = (acc[date] || 0) + 1;\n            return acc;\n        }, {});\n\n        return {\n            labels: Object.keys(dataCounts),\n            datasets: [\n                {\n                    label: 'Receipts Scanned',\n                    data: Object.values(dataCounts),\n                    backgroundColor: 'rgba(75,192,192,0.2)',\n                    borderColor: 'rgba(75, 192, 192, 1)',\n                    borderWidth: 1,\n                },\n            ],\n        };\n    };\n\n    return (\n        <div>\n            <h1>Restaurant Receipt Scanner</h1>\n\n            <div>\n                <input type=\"file\" accept=\"image/*\" onChange={handleAddReceipt} />\n                <p>Upload a vendor receipt to scan it.</p>\n            </div>\n\n            {scanResult && (\n                <div>\n                    <h2>Scan Result</h2>\n                    <pre>{scanResult}</pre>\n                </div>\n            )}\n\n            <div>\n                <h2>Receipts Graph</h2>\n                <select\n                    value={timeFilter}\n                    onChange={(e) => setTimeFilter(e.target.value)}\n                >\n                    <option value=\"day\">Day</option>\n                    <option value=\"week\">Week</option>\n                    <option value=\"month\">Month</option>\n                </select>\n\n                <Bar data={processDataForGraph()} />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}