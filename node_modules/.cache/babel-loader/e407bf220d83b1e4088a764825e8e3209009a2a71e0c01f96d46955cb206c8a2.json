{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\capbu\\\\IdeaProjects\\\\resturant\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Tesseract from 'tesseract.js';\nimport Webcam from 'react-webcam';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [receipts, setReceipts] = useState([]);\n  const webcamRef = useRef(null);\n  const captureAndRecognizeReceipt = () => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    Tesseract.recognize(imageSrc, 'eng', {\n      logger: info => console.log(info)\n    }).then(({\n      data: {\n        text\n      }\n    }) => {\n      console.log(\"OCR Output:\", text); // Log the OCR text for debugging\n      const newReceipt = parseReceipt(text);\n      setReceipts(prevReceipts => [...prevReceipts, newReceipt]);\n    }).catch(error => console.error('Error processing image:', error));\n  };\n  const parseReceipt = text => {\n    console.log(\"Parsed OCR Text:\", text);\n    const vendorMatch = text.match(/Vendor[:\\s]*(.*?)(\\n|$)/i);\n    const vendorName = vendorMatch ? vendorMatch[1].trim() : 'Unknown Vendor';\n    const itemMatch = text.match(/Item[:\\s]*(.*?)(\\n|$)/i);\n    const itemName = itemMatch ? itemMatch[1].trim() : 'Unknown Item';\n    const priceMatch = text.match(/Price[:\\s]*([\\d.]+)(\\n|$)/i);\n    const price = priceMatch ? parseFloat(priceMatch[1]) : 0;\n    const quantityMatch = text.match(/Quantity[:\\s]*(\\d+)(\\n|$)/i);\n    const quantity = quantityMatch ? parseInt(quantityMatch[1]) : 1;\n    const totalMatch = text.match(/Total[:\\s]*([\\d.]+)(\\n|$)/i);\n    const totalPrice = totalMatch ? parseFloat(totalMatch[1]) : price * quantity;\n    const date = new Date(); // Assume scan date as receipt date for simplicity\n\n    return {\n      vendorName,\n      itemName,\n      price,\n      quantity,\n      totalPrice,\n      date: date.toDateString() // Store as string for display\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Receipt Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Webcam, {\n      audio: false,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      width: \"100%\",\n      videoConstraints: {\n        width: 1280,\n        height: 720,\n        facingMode: \"environment\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: captureAndRecognizeReceipt,\n      children: \"Scan Receipt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Scanned Receipts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: receipts.map((receipt, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: receipt.vendorName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: receipt.itemName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", receipt.price.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: receipt.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", receipt.totalPrice.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: receipt.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"6wbgBK2Uzd4GWblRrwBhMvcQYQk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","Tesseract","Webcam","jsxDEV","_jsxDEV","App","_s","receipts","setReceipts","webcamRef","captureAndRecognizeReceipt","imageSrc","current","getScreenshot","recognize","logger","info","console","log","then","data","text","newReceipt","parseReceipt","prevReceipts","catch","error","vendorMatch","match","vendorName","trim","itemMatch","itemName","priceMatch","price","parseFloat","quantityMatch","quantity","parseInt","totalMatch","totalPrice","date","Date","toDateString","children","fileName","_jsxFileName","lineNumber","columnNumber","audio","ref","screenshotFormat","width","videoConstraints","height","facingMode","onClick","border","style","map","receipt","index","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/capbu/IdeaProjects/resturant/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport Tesseract from 'tesseract.js';\nimport Webcam from 'react-webcam';\nimport 'chart.js/auto';\n\nfunction App() {\n    const [receipts, setReceipts] = useState([]);\n    const webcamRef = useRef(null);\n\n    const captureAndRecognizeReceipt = () => {\n        const imageSrc = webcamRef.current.getScreenshot();\n        Tesseract.recognize(imageSrc, 'eng', { logger: (info) => console.log(info) })\n            .then(({ data: { text } }) => {\n                console.log(\"OCR Output:\", text); // Log the OCR text for debugging\n                const newReceipt = parseReceipt(text);\n                setReceipts(prevReceipts => [...prevReceipts, newReceipt]);\n            })\n            .catch((error) => console.error('Error processing image:', error));\n    };\n\n    const parseReceipt = (text) => {\n        console.log(\"Parsed OCR Text:\", text);\n\n        const vendorMatch = text.match(/Vendor[:\\s]*(.*?)(\\n|$)/i);\n        const vendorName = vendorMatch ? vendorMatch[1].trim() : 'Unknown Vendor';\n\n        const itemMatch = text.match(/Item[:\\s]*(.*?)(\\n|$)/i);\n        const itemName = itemMatch ? itemMatch[1].trim() : 'Unknown Item';\n\n        const priceMatch = text.match(/Price[:\\s]*([\\d.]+)(\\n|$)/i);\n        const price = priceMatch ? parseFloat(priceMatch[1]) : 0;\n\n        const quantityMatch = text.match(/Quantity[:\\s]*(\\d+)(\\n|$)/i);\n        const quantity = quantityMatch ? parseInt(quantityMatch[1]) : 1;\n\n        const totalMatch = text.match(/Total[:\\s]*([\\d.]+)(\\n|$)/i);\n        const totalPrice = totalMatch ? parseFloat(totalMatch[1]) : price * quantity;\n\n        const date = new Date(); // Assume scan date as receipt date for simplicity\n\n        return {\n            vendorName,\n            itemName,\n            price,\n            quantity,\n            totalPrice,\n            date: date.toDateString(), // Store as string for display\n        };\n    };\n\n    return (\n        <div>\n            <h1>Receipt Scanner</h1>\n            <Webcam\n                audio={false}\n                ref={webcamRef}\n                screenshotFormat=\"image/jpeg\"\n                width=\"100%\"\n                videoConstraints={{\n                    width: 1280,\n                    height: 720,\n                    facingMode: \"environment\"\n                }}\n            />\n            <button onClick={captureAndRecognizeReceipt}>Scan Receipt</button>\n            <div>\n                <h2>Scanned Receipts</h2>\n                <table border=\"1\" style={{ width: '100%' }}>\n                    <thead>\n                    <tr>\n                        <th>Vendor</th>\n                        <th>Item</th>\n                        <th>Price</th>\n                        <th>Quantity</th>\n                        <th>Total</th>\n                        <th>Date</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {receipts.map((receipt, index) => (\n                        <tr key={index}>\n                            <td>{receipt.vendorName}</td>\n                            <td>{receipt.itemName}</td>\n                            <td>${receipt.price.toFixed(2)}</td>\n                            <td>{receipt.quantity}</td>\n                            <td>${receipt.totalPrice.toFixed(2)}</td>\n                            <td>{receipt.date}</td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}