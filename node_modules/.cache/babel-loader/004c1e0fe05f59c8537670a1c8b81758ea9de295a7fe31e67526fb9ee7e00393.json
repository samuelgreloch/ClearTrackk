{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\capbu\\\\IdeaProjects\\\\resturant\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Importing necessary libraries\nimport React, { useState, useRef, useCallback } from 'react';\nimport Tesseract from 'tesseract.js';\nimport Webcam from 'react-webcam';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [receipts, setReceipts] = useState([]);\n  const [scanResult, setScanResult] = useState(null);\n  const [timeFilter, setTimeFilter] = useState('day');\n  const [useWebcam, setUseWebcam] = useState(false);\n  const webcamRef = useRef(null);\n  const handleAddReceipt = event => {\n    const file = event.target.files[0];\n    if (file) {\n      processImage(file);\n    }\n  };\n  const processImage = image => {\n    Tesseract.recognize(image, 'eng', {\n      logger: info => console.log(info)\n    }).then(({\n      data: {\n        text\n      }\n    }) => {\n      console.log(\"OCR Output:\", text); // Log the OCR text for debugging\n      const newReceipt = parseReceipt(text);\n      setReceipts([...receipts, newReceipt]);\n    }).catch(error => console.error('Error scanning receipt:', error));\n  };\n  const parseReceipt = text => {\n    // Replace static defaults with OCR-extracted data directly\n    const vendorMatch = text.match(/Vendor[:\\s]*(.*?)(\\n|$)/i);\n    const vendorName = vendorMatch ? vendorMatch[1].trim() : 'Unknown Vendor';\n    const itemMatch = text.match(/Item[:\\s]*(.*?)(\\n|$)/i);\n    const itemName = itemMatch ? itemMatch[1].trim() : 'Unknown Item';\n    const priceMatch = text.match(/Price[:\\s]*([\\d.]+)(\\n|$)/i);\n    const price = priceMatch ? parseFloat(priceMatch[1]) : 0;\n    const quantityMatch = text.match(/Quantity[:\\s]*(\\d+)(\\n|$)/i);\n    const quantity = quantityMatch ? parseInt(quantityMatch[1]) : 0;\n    const totalMatch = text.match(/Total[:\\s]*([\\d.]+)(\\n|$)/i);\n    const totalPrice = totalMatch ? parseFloat(totalMatch[1]) : price * quantity;\n    const dateMatch = text.match(/Date[:\\s]*(\\d{2}-\\d{2}-\\d{4})(\\n|$)/i);\n    const date = dateMatch ? new Date(dateMatch[1]) : new Date();\n    return {\n      vendorName,\n      itemName,\n      price,\n      quantity,\n      totalPrice,\n      date,\n      rawText: text // Keep raw text for debugging or additional processing\n    };\n  };\n  const processDataForGraph = () => {\n    const filteredReceipts = receipts.filter(receipt => {\n      const now = new Date();\n      const receiptDate = new Date(receipt.date);\n      if (timeFilter === 'day') {\n        return now.toDateString() === receiptDate.toDateString();\n      } else if (timeFilter === 'week') {\n        const oneWeekAgo = new Date();\n        oneWeekAgo.setDate(now.getDate() - 7);\n        return receiptDate >= oneWeekAgo;\n      } else if (timeFilter === 'month') {\n        return receiptDate.getMonth() === now.getMonth() && receiptDate.getFullYear() === now.getFullYear();\n      }\n      return false;\n    });\n    const priceTrends = receipts.map(receipt => ({\n      item: receipt.itemName,\n      price: receipt.price,\n      date: receipt.date.toDateString()\n    }));\n    return {\n      data: {\n        labels: priceTrends.map(entry => entry.date),\n        datasets: [{\n          label: 'Price per Unit',\n          data: priceTrends.map(entry => entry.price),\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        }]\n      },\n      summary: filteredReceipts\n    };\n  };\n  const captureFromWebcam = useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    fetch(imageSrc).then(res => res.blob()).then(blob => processImage(blob)).catch(error => console.error('Error capturing webcam image:', error));\n  }, [webcamRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Restaurant Receipt Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setUseWebcam(!useWebcam),\n        children: useWebcam ? 'Use File Upload' : 'Use Webcam'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), useWebcam ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        width: 400,\n        style: {\n          marginBottom: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: captureFromWebcam,\n        children: \"Capture and Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleAddReceipt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload a vendor receipt to scan it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this), scanResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Scan Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(scanResult, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Receipt Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          marginBottom: '20px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Vendor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: receipts.map((receipt, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: receipt.vendorName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: receipt.itemName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", receipt.price.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: receipt.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", receipt.totalPrice.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: receipt.date.toDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Price Trends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: timeFilter,\n        onChange: e => setTimeFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"day\",\n          children: \"Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"week\",\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"month\",\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: processDataForGraph().data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"gVneMhrefHppqNXjjx58LHGnTe0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useCallback","Tesseract","Webcam","Bar","jsxDEV","_jsxDEV","App","_s","receipts","setReceipts","scanResult","setScanResult","timeFilter","setTimeFilter","useWebcam","setUseWebcam","webcamRef","handleAddReceipt","event","file","target","files","processImage","image","recognize","logger","info","console","log","then","data","text","newReceipt","parseReceipt","catch","error","vendorMatch","match","vendorName","trim","itemMatch","itemName","priceMatch","price","parseFloat","quantityMatch","quantity","parseInt","totalMatch","totalPrice","dateMatch","date","Date","rawText","processDataForGraph","filteredReceipts","filter","receipt","now","receiptDate","toDateString","oneWeekAgo","setDate","getDate","getMonth","getFullYear","priceTrends","map","item","labels","entry","datasets","label","backgroundColor","borderColor","borderWidth","summary","captureFromWebcam","imageSrc","current","getScreenshot","fetch","res","blob","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","audio","ref","screenshotFormat","width","style","marginBottom","type","accept","onChange","JSON","stringify","border","index","toFixed","value","e","_c","$RefreshReg$"],"sources":["C:/Users/capbu/IdeaProjects/resturant/src/App.js"],"sourcesContent":["// Importing necessary libraries\nimport React, { useState, useRef, useCallback } from 'react';\nimport Tesseract from 'tesseract.js';\nimport Webcam from 'react-webcam';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nfunction App() {\n    const [receipts, setReceipts] = useState([]);\n    const [scanResult, setScanResult] = useState(null);\n    const [timeFilter, setTimeFilter] = useState('day');\n    const [useWebcam, setUseWebcam] = useState(false);\n    const webcamRef = useRef(null);\n\n    const handleAddReceipt = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            processImage(file);\n        }\n    };\n\n    const processImage = (image) => {\n        Tesseract.recognize(image, 'eng', { logger: (info) => console.log(info) })\n            .then(({ data: { text } }) => {\n                console.log(\"OCR Output:\", text); // Log the OCR text for debugging\n                const newReceipt = parseReceipt(text);\n                setReceipts([...receipts, newReceipt]);\n            })\n            .catch((error) => console.error('Error scanning receipt:', error));\n    };\n\n    const parseReceipt = (text) => {\n        // Replace static defaults with OCR-extracted data directly\n        const vendorMatch = text.match(/Vendor[:\\s]*(.*?)(\\n|$)/i);\n        const vendorName = vendorMatch ? vendorMatch[1].trim() : 'Unknown Vendor';\n\n        const itemMatch = text.match(/Item[:\\s]*(.*?)(\\n|$)/i);\n        const itemName = itemMatch ? itemMatch[1].trim() : 'Unknown Item';\n\n        const priceMatch = text.match(/Price[:\\s]*([\\d.]+)(\\n|$)/i);\n        const price = priceMatch ? parseFloat(priceMatch[1]) : 0;\n\n        const quantityMatch = text.match(/Quantity[:\\s]*(\\d+)(\\n|$)/i);\n        const quantity = quantityMatch ? parseInt(quantityMatch[1]) : 0;\n\n        const totalMatch = text.match(/Total[:\\s]*([\\d.]+)(\\n|$)/i);\n        const totalPrice = totalMatch ? parseFloat(totalMatch[1]) : price * quantity;\n\n        const dateMatch = text.match(/Date[:\\s]*(\\d{2}-\\d{2}-\\d{4})(\\n|$)/i);\n        const date = dateMatch ? new Date(dateMatch[1]) : new Date();\n\n        return {\n            vendorName,\n            itemName,\n            price,\n            quantity,\n            totalPrice,\n            date,\n            rawText: text, // Keep raw text for debugging or additional processing\n        };\n    };\n\n    const processDataForGraph = () => {\n        const filteredReceipts = receipts.filter((receipt) => {\n            const now = new Date();\n            const receiptDate = new Date(receipt.date);\n\n            if (timeFilter === 'day') {\n                return now.toDateString() === receiptDate.toDateString();\n            } else if (timeFilter === 'week') {\n                const oneWeekAgo = new Date();\n                oneWeekAgo.setDate(now.getDate() - 7);\n                return receiptDate >= oneWeekAgo;\n            } else if (timeFilter === 'month') {\n                return (\n                    receiptDate.getMonth() === now.getMonth() &&\n                    receiptDate.getFullYear() === now.getFullYear()\n                );\n            }\n            return false;\n        });\n\n        const priceTrends = receipts.map((receipt) => ({\n            item: receipt.itemName,\n            price: receipt.price,\n            date: receipt.date.toDateString(),\n        }));\n\n        return {\n            data: {\n                labels: priceTrends.map((entry) => entry.date),\n                datasets: [\n                    {\n                        label: 'Price per Unit',\n                        data: priceTrends.map((entry) => entry.price),\n                        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n                        borderColor: 'rgba(75, 192, 192, 1)',\n                        borderWidth: 1,\n                    },\n                ],\n            },\n            summary: filteredReceipts,\n        };\n    };\n\n    const captureFromWebcam = useCallback(() => {\n        const imageSrc = webcamRef.current.getScreenshot();\n        fetch(imageSrc)\n            .then((res) => res.blob())\n            .then((blob) => processImage(blob))\n            .catch((error) => console.error('Error capturing webcam image:', error));\n    }, [webcamRef]);\n\n    return (\n        <div>\n            <h1>Restaurant Receipt Scanner</h1>\n\n            <div>\n                <button onClick={() => setUseWebcam(!useWebcam)}>\n                    {useWebcam ? 'Use File Upload' : 'Use Webcam'}\n                </button>\n            </div>\n\n            {useWebcam ? (\n                <div>\n                    <Webcam\n                        audio={false}\n                        ref={webcamRef}\n                        screenshotFormat=\"image/jpeg\"\n                        width={400}\n                        style={{ marginBottom: '20px' }}\n                    />\n                    <button onClick={captureFromWebcam}>Capture and Scan</button>\n                </div>\n            ) : (\n                <div>\n                    <input type=\"file\" accept=\"image/*\" onChange={handleAddReceipt} />\n                    <p>Upload a vendor receipt to scan it.</p>\n                </div>\n            )}\n\n            {scanResult && (\n                <div>\n                    <h2>Scan Result</h2>\n                    <pre>{JSON.stringify(scanResult, null, 2)}</pre>\n                </div>\n            )}\n\n            <div>\n                <h2>Receipt Details</h2>\n                <table border=\"1\" style={{ marginBottom: '20px', width: '100%' }}>\n                    <thead>\n                    <tr>\n                        <th>Vendor</th>\n                        <th>Item</th>\n                        <th>Price</th>\n                        <th>Quantity</th>\n                        <th>Total</th>\n                        <th>Date</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {receipts.map((receipt, index) => (\n                        <tr key={index}>\n                            <td>{receipt.vendorName}</td>\n                            <td>{receipt.itemName}</td>\n                            <td>${receipt.price.toFixed(2)}</td>\n                            <td>{receipt.quantity}</td>\n                            <td>${receipt.totalPrice.toFixed(2)}</td>\n                            <td>{receipt.date.toDateString()}</td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n            </div>\n\n            <div>\n                <h2>Price Trends</h2>\n                <select value={timeFilter} onChange={(e) => setTimeFilter(e.target.value)}>\n                    <option value=\"day\">Day</option>\n                    <option value=\"week\">Week</option>\n                    <option value=\"month\">Month</option>\n                </select>\n\n                <Bar data={processDataForGraph().data} />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}