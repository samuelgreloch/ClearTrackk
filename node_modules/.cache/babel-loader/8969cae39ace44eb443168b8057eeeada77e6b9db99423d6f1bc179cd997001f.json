{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\capbu\\\\IdeaProjects\\\\resturant\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Importing necessary libraries\nimport React, { useState, useRef, useCallback } from 'react';\nimport Tesseract from 'tesseract.js';\nimport Webcam from 'react-webcam';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [receipts, setReceipts] = useState([]);\n  const [scanResult, setScanResult] = useState(null);\n  const [timeFilter, setTimeFilter] = useState('day');\n  const [useWebcam, setUseWebcam] = useState(false);\n  const webcamRef = useRef(null);\n  const handleAddReceipt = event => {\n    const file = event.target.files[0];\n    if (file) {\n      processImage(file);\n    }\n  };\n  const processImage = image => {\n    Tesseract.recognize(image, 'eng', {\n      logger: info => console.log(info)\n    }).then(({\n      data: {\n        text\n      }\n    }) => {\n      const newReceipt = parseReceipt(text);\n      setReceipts([...receipts, newReceipt]);\n    }).catch(error => console.error('Error scanning receipt:', error));\n  };\n  const parseReceipt = text => {\n    const vendorMatch = text.match(/(.*Restaurant|.*Cafe|.*Diner)/i);\n    const vendorName = vendorMatch ? vendorMatch[0] : 'Unknown Vendor';\n    const dateMatch = text.match(/\\d{2}\\/\\d{2}\\/\\d{4}/);\n    const date = dateMatch ? new Date(dateMatch[0]) : new Date();\n    const totalMatch = text.match(/TOTAL\\s*\\$([0-9\\.]+)/i);\n    const totalPrice = totalMatch ? parseFloat(totalMatch[1]) : 0;\n    return {\n      vendorName,\n      date,\n      totalPrice,\n      rawText: text\n    };\n  };\n  const processDataForGraph = () => {\n    const filteredReceipts = receipts.filter(receipt => {\n      const now = new Date();\n      const receiptDate = new Date(receipt.date);\n      if (timeFilter === 'day') {\n        return now.toDateString() === receiptDate.toDateString();\n      } else if (timeFilter === 'week') {\n        const oneWeekAgo = new Date();\n        oneWeekAgo.setDate(now.getDate() - 7);\n        return receiptDate >= oneWeekAgo;\n      } else if (timeFilter === 'month') {\n        return receiptDate.getMonth() === now.getMonth() && receiptDate.getFullYear() === now.getFullYear();\n      }\n      return false;\n    });\n    const dataCounts = filteredReceipts.reduce((acc, receipt) => {\n      const date = new Date(receipt.date).toDateString();\n      acc[date] = (acc[date] || 0) + 1;\n      return acc;\n    }, {});\n    const totalSales = filteredReceipts.reduce((sum, receipt) => sum + receipt.totalPrice, 0);\n    const totalReceipts = filteredReceipts.length;\n    return {\n      data: {\n        labels: Object.keys(dataCounts),\n        datasets: [{\n          label: 'Receipts Scanned',\n          data: Object.values(dataCounts),\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        }]\n      },\n      summary: {\n        totalSales,\n        totalReceipts\n      }\n    };\n  };\n  const captureFromWebcam = useCallback(() => {\n    const imageSrc = webcamRef.current.getScreenshot();\n    fetch(imageSrc).then(res => res.blob()).then(blob => processImage(blob)).catch(error => console.error('Error capturing webcam image:', error));\n  }, [webcamRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Restaurant Receipt Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setUseWebcam(!useWebcam),\n        children: useWebcam ? 'Use File Upload' : 'Use Webcam'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), useWebcam ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        audio: false,\n        ref: webcamRef,\n        screenshotFormat: \"image/jpeg\",\n        width: 400,\n        style: {\n          marginBottom: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: captureFromWebcam,\n        children: \"Capture and Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleAddReceipt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload a vendor receipt to scan it.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this), scanResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Scan Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(scanResult, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Financial Insights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ccc',\n          padding: '10px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Sales:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), \" $\", processDataForGraph().summary.totalSales.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Receipts Scanned:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), \" \", processDataForGraph().summary.totalReceipts]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Receipts Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: timeFilter,\n        onChange: e => setTimeFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"day\",\n          children: \"Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"week\",\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"month\",\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        data: processDataForGraph().data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"gVneMhrefHppqNXjjx58LHGnTe0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useCallback","Tesseract","Webcam","Bar","jsxDEV","_jsxDEV","App","_s","receipts","setReceipts","scanResult","setScanResult","timeFilter","setTimeFilter","useWebcam","setUseWebcam","webcamRef","handleAddReceipt","event","file","target","files","processImage","image","recognize","logger","info","console","log","then","data","text","newReceipt","parseReceipt","catch","error","vendorMatch","match","vendorName","dateMatch","date","Date","totalMatch","totalPrice","parseFloat","rawText","processDataForGraph","filteredReceipts","filter","receipt","now","receiptDate","toDateString","oneWeekAgo","setDate","getDate","getMonth","getFullYear","dataCounts","reduce","acc","totalSales","sum","totalReceipts","length","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","summary","captureFromWebcam","imageSrc","current","getScreenshot","fetch","res","blob","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","audio","ref","screenshotFormat","width","style","marginBottom","type","accept","onChange","JSON","stringify","border","padding","toFixed","value","e","_c","$RefreshReg$"],"sources":["C:/Users/capbu/IdeaProjects/resturant/src/App.js"],"sourcesContent":["// Importing necessary libraries\nimport React, { useState, useRef, useCallback } from 'react';\nimport Tesseract from 'tesseract.js';\nimport Webcam from 'react-webcam';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nfunction App() {\n    const [receipts, setReceipts] = useState([]);\n    const [scanResult, setScanResult] = useState(null);\n    const [timeFilter, setTimeFilter] = useState('day');\n    const [useWebcam, setUseWebcam] = useState(false);\n    const webcamRef = useRef(null);\n\n    const handleAddReceipt = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            processImage(file);\n        }\n    };\n\n    const processImage = (image) => {\n        Tesseract.recognize(image, 'eng', { logger: (info) => console.log(info) })\n            .then(({ data: { text } }) => {\n                const newReceipt = parseReceipt(text);\n                setReceipts([...receipts, newReceipt]);\n            })\n            .catch((error) => console.error('Error scanning receipt:', error));\n    };\n\n    const parseReceipt = (text) => {\n        const vendorMatch = text.match(/(.*Restaurant|.*Cafe|.*Diner)/i);\n        const vendorName = vendorMatch ? vendorMatch[0] : 'Unknown Vendor';\n\n        const dateMatch = text.match(/\\d{2}\\/\\d{2}\\/\\d{4}/);\n        const date = dateMatch ? new Date(dateMatch[0]) : new Date();\n\n        const totalMatch = text.match(/TOTAL\\s*\\$([0-9\\.]+)/i);\n        const totalPrice = totalMatch ? parseFloat(totalMatch[1]) : 0;\n\n        return {\n            vendorName,\n            date,\n            totalPrice,\n            rawText: text,\n        };\n    };\n\n    const processDataForGraph = () => {\n        const filteredReceipts = receipts.filter((receipt) => {\n            const now = new Date();\n            const receiptDate = new Date(receipt.date);\n\n            if (timeFilter === 'day') {\n                return now.toDateString() === receiptDate.toDateString();\n            } else if (timeFilter === 'week') {\n                const oneWeekAgo = new Date();\n                oneWeekAgo.setDate(now.getDate() - 7);\n                return receiptDate >= oneWeekAgo;\n            } else if (timeFilter === 'month') {\n                return (\n                    receiptDate.getMonth() === now.getMonth() &&\n                    receiptDate.getFullYear() === now.getFullYear()\n                );\n            }\n            return false;\n        });\n\n        const dataCounts = filteredReceipts.reduce((acc, receipt) => {\n            const date = new Date(receipt.date).toDateString();\n            acc[date] = (acc[date] || 0) + 1;\n            return acc;\n        }, {});\n\n        const totalSales = filteredReceipts.reduce((sum, receipt) => sum + receipt.totalPrice, 0);\n        const totalReceipts = filteredReceipts.length;\n\n        return {\n            data: {\n                labels: Object.keys(dataCounts),\n                datasets: [\n                    {\n                        label: 'Receipts Scanned',\n                        data: Object.values(dataCounts),\n                        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n                        borderColor: 'rgba(75, 192, 192, 1)',\n                        borderWidth: 1,\n                    },\n                ],\n            },\n            summary: {\n                totalSales,\n                totalReceipts,\n            },\n        };\n    };\n\n    const captureFromWebcam = useCallback(() => {\n        const imageSrc = webcamRef.current.getScreenshot();\n        fetch(imageSrc)\n            .then((res) => res.blob())\n            .then((blob) => processImage(blob))\n            .catch((error) => console.error('Error capturing webcam image:', error));\n    }, [webcamRef]);\n\n    return (\n        <div>\n            <h1>Restaurant Receipt Scanner</h1>\n\n            <div>\n                <button onClick={() => setUseWebcam(!useWebcam)}>\n                    {useWebcam ? 'Use File Upload' : 'Use Webcam'}\n                </button>\n            </div>\n\n            {useWebcam ? (\n                <div>\n                    <Webcam\n                        audio={false}\n                        ref={webcamRef}\n                        screenshotFormat=\"image/jpeg\"\n                        width={400}\n                        style={{ marginBottom: '20px' }}\n                    />\n                    <button onClick={captureFromWebcam}>Capture and Scan</button>\n                </div>\n            ) : (\n                <div>\n                    <input type=\"file\" accept=\"image/*\" onChange={handleAddReceipt} />\n                    <p>Upload a vendor receipt to scan it.</p>\n                </div>\n            )}\n\n            {scanResult && (\n                <div>\n                    <h2>Scan Result</h2>\n                    <pre>{JSON.stringify(scanResult, null, 2)}</pre>\n                </div>\n            )}\n\n            <div>\n                <h2>Financial Insights</h2>\n                <div style={{ border: '1px solid #ccc', padding: '10px', marginBottom: '20px' }}>\n                    <p>\n                        <strong>Total Sales:</strong> ${processDataForGraph().summary.totalSales.toFixed(2)}\n                    </p>\n                    <p>\n                        <strong>Total Receipts Scanned:</strong> {processDataForGraph().summary.totalReceipts}\n                    </p>\n                </div>\n            </div>\n\n            <div>\n                <h2>Receipts Graph</h2>\n                <select value={timeFilter} onChange={(e) => setTimeFilter(e.target.value)}>\n                    <option value=\"day\">Day</option>\n                    <option value=\"week\">Week</option>\n                    <option value=\"month\">Month</option>\n                </select>\n\n                <Bar data={processDataForGraph().data} />\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}